<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <security:http  auto-config="true" use-expressions="true">
        <security:csrf disabled="true"></security:csrf>
        <security:intercept-url pattern="/home/login.do" access="permitAll" requires-channel="https"/>
        <security:intercept-url pattern="/home/**" access="hasRole('ROLE_USER')" requires-channel="https"></security:intercept-url>
        <security:form-login  login-page="/home/login.do"></security:form-login>
        <security:logout invalidate-session="true" logout-success-url="/"
                         logout-url="/j_spring_security_logout"></security:logout>
        <security:custom-filter ref="requestHeaderFilter" before="FORM_LOGIN_FILTER"/>
        <!--<security:remember-me key="ffzlreme" user-service-ref="test" remember-me-parameter="re"/>-->
        <security:remember-me key="jbcpPetStore" token-validity-seconds="3600" remember-me-parameter="re" data-source-ref="dataSource" user-service-ref="jdbcUserService"/>
        <security:custom-filter ref="ipFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <security:session-management>
            <security:concurrency-control max-sessions="1"/>
        </security:session-management>
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="signedRequestAuthenticationProvider"></security:authentication-provider>
        <security:authentication-provider user-service-ref="jdbcUserService">
            <security:password-encoder ref="passwordEncoder">
                <security:salt-source ref="saltSource"/>
            </security:password-encoder>
            <!--<security:jdbc-user-service data-source-ref="dataSource"/>-->
            <!--<security:user-service id="test">-->
                <!--<security:user name="user" authorities="ROLE_USER" password="user"/>-->
            <!--</security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>
    <jdbc:embedded-database id="dataSource"  type="HSQL">
        <jdbc:script location="classpath*:security-schema.sql"></jdbc:script>
    </jdbc:embedded-database>
    <bean id="signedRequestAuthenticationProvider" class="org.dragonfei.web.SingedUsernamePasswordAuthenticationProvider">
        <property name="passwordEncoder" ref="passwordEncoder"></property>
        <property name="saltSource" ref="saltSource"></property>
        <property name="userDetailsService" ref="jdbcUserService"></property>

    </bean>
    <!--<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">-->
        <!--<property name="userPropertyToUse" value="username"/>-->
    <!--</bean>-->
    <bean id="saltSource" class="org.dragonfei.web.RandomSalt"/>
    <!--<bean id="jdbcUserService1" class="org.dragonfei.web.CustomJdbcaoImpl">-->
        <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--</bean>-->
    <bean class="org.dragonfei.web.DatabasePasswordSecureerBean" init-method="secureDatabase" depends-on="dataSource">
        <property name="dataSource"  ref="dataSource"/>
    </bean>
    <!--<bean id="jdbcUserService" class="org.springframework.security.provisioning.JdbcUserDetailsManager">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="authenticationManager" ref="authenticationManager"/>-->
        <!--<property name="enableGroups" value="true"></property>-->
        <!--<property name="enableAuthorities" value="false"></property>-->
        <!--<property name="usersByUsernameQuery">-->
            <!--<value>select username,passwordmenabled,salt from users where username = ?</value>-->
        <!--</property>-->
        <!--<property name="changePasswordSql">-->
            <!--<value></value>-->
        <!--</property>-->
    <!--</bean>-->
    <bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder"></bean>
    <bean id="jdbcUserService" class="org.dragonfei.web.CustomJdbcaoImpl">
        <property name="dataSource" ref="dataSource"/>
        <property name="enableGroups" value="true"></property>
        <property name="enableAuthorities" value="false"></property>
        <property name="usersByUsernameQuery">
            <value>select username,password,enabled,salt from users where username = ?</value>
        </property>
    </bean>
    <bean id="ipFilter" class="org.dragonfei.web.IPRoleAuthenticationFilter">
        <property name="targetRole" value="ROLE_ADMIN"/>
        <property name="allowedIpAddress">
            <list>
                <value>127.0.0.1</value>
                <value>0:0:0:0:0:0:0:1</value>
            </list>
        </property>
    </bean>
    <bean id="requestHeaderFilter" class="org.dragonfei.web.RequestHeaderProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"></property>
    </bean>
</beans>